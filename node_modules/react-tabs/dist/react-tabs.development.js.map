{"version":3,"file":"react-tabs.development.js","sources":["../src/helpers/elementTypes.js","../src/helpers/childrenDeepMap.js","../src/helpers/propTypes.js","../node_modules/classnames/index.js","../src/helpers/uuid.js","../src/helpers/count.js","../src/components/UncontrolledTabs.js","../src/components/Tabs.js","../src/components/TabList.js","../src/components/Tab.js","../src/components/TabPanel.js"],"sourcesContent":["export function isTab(el) {\n  return el.type && el.type.tabsRole === 'Tab';\n}\n\nexport function isTabPanel(el) {\n  return el.type && el.type.tabsRole === 'TabPanel';\n}\n\nexport function isTabList(el) {\n  return el.type && el.type.tabsRole === 'TabList';\n}\n","import { Children, cloneElement } from 'react';\nimport { isTabPanel, isTab, isTabList } from '../helpers/elementTypes';\n\nfunction isTabChild(child) {\n  return isTab(child) || isTabList(child) || isTabPanel(child);\n}\n\nexport function deepMap(children, callback) {\n  return Children.map(children, child => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return null;\n\n    if (isTabChild(child)) {\n      return callback(child);\n    }\n\n    if (child.props && child.props.children && typeof child.props.children === 'object') {\n      // Clone the child that has children and map them too\n      return cloneElement(child, {\n        ...child.props,\n        children: deepMap(child.props.children, callback),\n      });\n    }\n\n    return child;\n  });\n}\n\nexport function deepForEach(children, callback) {\n  return Children.forEach(children, child => {\n    // null happens when conditionally rendering TabPanel/Tab\n    // see https://github.com/reactjs/react-tabs/issues/37\n    if (child === null) return;\n\n    if (isTab(child) || isTabPanel(child)) {\n      callback(child);\n    } else if (child.props && child.props.children && typeof child.props.children === 'object') {\n      if (isTabList(child)) callback(child);\n      deepForEach(child.props.children, callback);\n    }\n  });\n}\n","import { deepForEach } from '../helpers/childrenDeepMap';\nimport { isTab, isTabList, isTabPanel } from '../helpers/elementTypes';\n\nexport function childrenPropType(props, propName, componentName) {\n  let error;\n  let tabsCount = 0;\n  let panelsCount = 0;\n  let tabListFound = false;\n  const listTabs = [];\n  const children = props[propName];\n\n  deepForEach(children, child => {\n    if (isTabList(child)) {\n      if (child.props && child.props.children && typeof child.props.children === 'object') {\n        deepForEach(child.props.children, listChild => listTabs.push(listChild));\n      }\n\n      if (tabListFound) {\n        error = new Error(\n          \"Found multiple 'TabList' components inside 'Tabs'. Only one is allowed.\",\n        );\n      }\n      tabListFound = true;\n    }\n    if (isTab(child)) {\n      if (!tabListFound || listTabs.indexOf(child) === -1) {\n        error = new Error(\n          \"Found a 'Tab' component outside of the 'TabList' component. 'Tab' components have to be inside the 'TabList' component.\",\n        );\n      }\n      tabsCount++;\n    } else if (isTabPanel(child)) {\n      panelsCount++;\n    }\n  });\n\n  if (!error && tabsCount !== panelsCount) {\n    error = new Error(\n      `There should be an equal number of 'Tab' and 'TabPanel' in \\`${componentName}\\`.` +\n        `Received ${tabsCount} 'Tab' and ${panelsCount} 'TabPanel'.`,\n    );\n  }\n\n  return error;\n}\n\nexport function onSelectPropType(props, propName, componentName, location, propFullName) {\n  const prop = props[propName];\n  const name = propFullName || propName;\n  let error = null;\n\n  if (prop && typeof prop !== 'function') {\n    error = new Error(\n      `Invalid ${location} \\`${name}\\` of type \\`${typeof prop}\\` supplied to \\`${\n        componentName\n      }\\`, expected \\`function\\`.`,\n    );\n  } else if (props.selectedIndex != null && prop == null) {\n    error = new Error(\n      `The ${location} \\`${name}\\` is marked as required in \\`${\n        componentName\n      }\\`, but its value is \\`undefined\\` or \\`null\\`.\n\\`onSelect\\` is required when \\`selectedIndex\\` is also set. Not doing so will make the tabs not do anything, as \\`selectedIndex\\` indicates that you want to handle the selected tab yourself.\nIf you only want to set the inital tab replace \\`selectedIndex\\` with \\`defaultIndex\\`.`,\n    );\n  }\n\n  return error;\n}\n\nexport function selectedIndexPropType(props, propName, componentName, location, propFullName) {\n  const prop = props[propName];\n  const name = propFullName || propName;\n  let error = null;\n\n  if (prop != null && typeof prop !== 'number') {\n    error = new Error(\n      `Invalid ${location} \\`${name}\\` of type \\`${typeof prop}\\` supplied to \\`${\n        componentName\n      }\\`, expected \\`number\\`.`,\n    );\n  } else if (props.defaultIndex != null && prop != null) {\n    return new Error(\n      `The ${location} \\`${name}\\` cannot be used together with \\`defaultIndex\\` in \\`${\n        componentName\n      }\\`.\nEither remove \\`${name}\\` to let \\`${\n        componentName\n      }\\` handle the selected tab internally or remove \\`defaultIndex\\` to handle it yourself.`,\n    );\n  }\n\n  return error;\n}\n","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// Get a universally unique identifier\nlet count = 0;\nexport default function uuid() {\n  return `react-tabs-${count++}`;\n}\n\nexport function reset() {\n  count = 0;\n}\n","import { deepForEach } from '../helpers/childrenDeepMap';\nimport { isTab, isTabPanel } from './elementTypes';\n\nexport function getTabsCount(children) {\n  let tabCount = 0;\n  deepForEach(children, child => {\n    if (isTab(child)) tabCount++;\n  });\n\n  return tabCount;\n}\n\nexport function getPanelsCount(children) {\n  let panelCount = 0;\n  deepForEach(children, child => {\n    if (isTabPanel(child)) panelCount++;\n  });\n\n  return panelCount;\n}\n","import PropTypes from 'prop-types';\nimport React, { cloneElement, Component } from 'react';\nimport cx from 'classnames';\nimport uuid from '../helpers/uuid';\nimport { childrenPropType } from '../helpers/propTypes';\nimport { getPanelsCount, getTabsCount } from '../helpers/count';\nimport { deepMap } from '../helpers/childrenDeepMap';\nimport { isTabList, isTabPanel, isTab } from '../helpers/elementTypes';\n\n// Determine if a node from event.target is a Tab element\nfunction isTabNode(node) {\n  return node.nodeName === 'LI' && node.getAttribute('role') === 'tab';\n}\n\n// Determine if a tab node is disabled\nfunction isTabDisabled(node) {\n  return node.getAttribute('aria-disabled') === 'true';\n}\n\nlet canUseActiveElement;\ntry {\n  canUseActiveElement = !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.activeElement\n  );\n} catch (e) {\n  // Work around for IE bug when accessing document.activeElement in an iframe\n  // Refer to the following resources:\n  // http://stackoverflow.com/a/10982960/369687\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/12733599\n  canUseActiveElement = false;\n}\nexport default class UncontrolledTabs extends Component {\n  static defaultProps = {\n    className: 'react-tabs',\n    focus: false,\n  };\n\n  static propTypes = {\n    children: childrenPropType,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n    disabledTabClassName: PropTypes.string,\n    domRef: PropTypes.func,\n    focus: PropTypes.bool,\n    forceRenderTabPanel: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired,\n    selectedIndex: PropTypes.number.isRequired,\n    selectedTabClassName: PropTypes.string,\n    selectedTabPanelClassName: PropTypes.string,\n  };\n\n  tabNodes = [];\n\n  setSelected(index, event) {\n    // Check index boundary\n    if (index < 0 || index >= this.getTabsCount()) return;\n\n    // Call change event handler\n    this.props.onSelect(index, this.props.selectedIndex, event);\n  }\n\n  getNextTab(index) {\n    const count = this.getTabsCount();\n\n    // Look for non-disabled tab from index to the last tab on the right\n    for (let i = index + 1; i < count; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    // If no tab found, continue searching from first on left to index\n    for (let i = 0; i < index; i++) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    // No tabs are disabled, return index\n    return index;\n  }\n\n  getPrevTab(index) {\n    let i = index;\n\n    // Look for non-disabled tab from index to first tab on the left\n    while (i--) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    // If no tab found, continue searching from last tab on right to index\n    i = this.getTabsCount();\n    while (i-- > index) {\n      if (!isTabDisabled(this.getTab(i))) {\n        return i;\n      }\n    }\n\n    // No tabs are disabled, return index\n    return index;\n  }\n\n  getTabsCount() {\n    return getTabsCount(this.props.children);\n  }\n\n  getPanelsCount() {\n    return getPanelsCount(this.props.children);\n  }\n\n  getTab(index) {\n    return this.tabNodes[`tabs-${index}`];\n  }\n\n  getChildren() {\n    let index = 0;\n    const {\n      children,\n      disabledTabClassName,\n      focus,\n      forceRenderTabPanel,\n      selectedIndex,\n      selectedTabClassName,\n      selectedTabPanelClassName,\n    } = this.props;\n\n    this.tabIds = this.tabIds || [];\n    this.panelIds = this.panelIds || [];\n    let diff = this.tabIds.length - this.getTabsCount();\n\n    // Add ids if new tabs have been added\n    // Don't bother removing ids, just keep them in case they are added again\n    // This is more efficient, and keeps the uuid counter under control\n    while (diff++ < 0) {\n      this.tabIds.push(uuid());\n      this.panelIds.push(uuid());\n    }\n\n    // Map children to dynamically setup refs\n    return deepMap(children, child => {\n      let result = child;\n\n      // Clone TabList and Tab components to have refs\n      if (isTabList(child)) {\n        let listIndex = 0;\n\n        // Figure out if the current focus in the DOM is set on a Tab\n        // If it is we should keep the focus on the next selected tab\n        let wasTabFocused = false;\n\n        if (canUseActiveElement) {\n          wasTabFocused = React.Children.toArray(child.props.children)\n            .filter(isTab)\n            .some((tab, i) => document.activeElement === this.getTab(i));\n        }\n\n        result = cloneElement(child, {\n          children: deepMap(child.props.children, tab => {\n            const key = `tabs-${listIndex}`;\n            const selected = selectedIndex === listIndex;\n\n            const props = {\n              tabRef: node => {\n                this.tabNodes[key] = node;\n              },\n              id: this.tabIds[listIndex],\n              panelId: this.panelIds[listIndex],\n              selected,\n              focus: selected && (focus || wasTabFocused),\n            };\n\n            if (selectedTabClassName) props.selectedClassName = selectedTabClassName;\n            if (disabledTabClassName) props.disabledClassName = disabledTabClassName;\n\n            listIndex++;\n\n            return cloneElement(tab, props);\n          }),\n        });\n      } else if (isTabPanel(child)) {\n        const props = {\n          id: this.panelIds[index],\n          tabId: this.tabIds[index],\n          selected: selectedIndex === index,\n        };\n\n        if (forceRenderTabPanel) props.forceRender = forceRenderTabPanel;\n        if (selectedTabPanelClassName) props.selectedClassName = selectedTabPanelClassName;\n\n        index++;\n\n        result = cloneElement(child, props);\n      }\n\n      return result;\n    });\n  }\n\n  handleKeyDown = e => {\n    if (this.isTabFromContainer(e.target)) {\n      let index = this.props.selectedIndex;\n      let preventDefault = false;\n      let useSelectedIndex = false;\n\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        preventDefault = true;\n        useSelectedIndex = false;\n        this.handleClick(e);\n      }\n\n      if (e.keyCode === 37 || e.keyCode === 38) {\n        // Select next tab to the left\n        index = this.getPrevTab(index);\n        preventDefault = true;\n        useSelectedIndex = true;\n      } else if (e.keyCode === 39 || e.keyCode === 40) {\n        // Select next tab to the right\n        index = this.getNextTab(index);\n        preventDefault = true;\n        useSelectedIndex = true;\n      }\n\n      // This prevents scrollbars from moving around\n      if (preventDefault) {\n        e.preventDefault();\n      }\n\n      // Only use the selected index in the state if we're not using the tabbed index\n      if (useSelectedIndex) {\n        this.setSelected(index, e);\n      }\n    }\n  };\n\n  handleClick = e => {\n    let node = e.target;\n    // eslint-disable-next-line no-cond-assign\n    do {\n      if (this.isTabFromContainer(node)) {\n        if (isTabDisabled(node)) {\n          return;\n        }\n\n        const index = [].slice\n          .call(node.parentNode.children)\n          .filter(isTabNode)\n          .indexOf(node);\n        this.setSelected(index, e);\n        return;\n      }\n    } while ((node = node.parentNode) !== null);\n  };\n\n  /**\n   * Determine if a node from event.target is a Tab element for the current Tabs container.\n   * If the clicked element is not a Tab, it returns false.\n   * If it finds another Tabs container between the Tab and `this`, it returns false.\n   */\n  isTabFromContainer(node) {\n    // return immediately if the clicked element is not a Tab.\n    if (!isTabNode(node)) {\n      return false;\n    }\n\n    // Check if the first occurrence of a Tabs container is `this` one.\n    let nodeAncestor = node.parentElement;\n    do {\n      if (nodeAncestor === this.node) return true;\n      else if (nodeAncestor.getAttribute('data-tabs')) break;\n\n      nodeAncestor = nodeAncestor.parentElement;\n    } while (nodeAncestor);\n\n    return false;\n  }\n\n  render() {\n    // Delete all known props, so they don't get added to DOM\n    const {\n      children, // unused\n      className,\n      disabledTabClassName, // unused\n      domRef,\n      focus, // unused\n      forceRenderTabPanel, // unused\n      onSelect, // unused\n      selectedIndex, // unused\n      selectedTabClassName, // unused\n      selectedTabPanelClassName, // unused\n      ...attributes\n    } = this.props;\n\n    return (\n      <div\n        {...attributes}\n        className={cx(className)}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        ref={node => {\n          this.node = node;\n          if (domRef) domRef(node);\n        }}\n        data-tabs\n      >\n        {this.getChildren()}\n      </div>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { childrenPropType, onSelectPropType, selectedIndexPropType } from '../helpers/propTypes';\nimport UncontrolledTabs from './UncontrolledTabs';\nimport { getTabsCount } from '../helpers/count';\n\nexport default class Tabs extends Component {\n  static defaultProps = {\n    defaultFocus: false,\n    forceRenderTabPanel: false,\n    selectedIndex: null,\n    defaultIndex: null,\n  };\n\n  static propTypes = {\n    children: childrenPropType,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n    defaultFocus: PropTypes.bool,\n    defaultIndex: PropTypes.number,\n    disabledTabClassName: PropTypes.string,\n    domRef: PropTypes.func,\n    forceRenderTabPanel: PropTypes.bool,\n    onSelect: onSelectPropType,\n    selectedIndex: selectedIndexPropType,\n    selectedTabClassName: PropTypes.string,\n    selectedTabPanelClassName: PropTypes.string,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = Tabs.copyPropsToState(this.props, {}, this.props.defaultFocus);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      Tabs.inUncontrolledMode(newProps) !== Tabs.inUncontrolledMode(this.props)\n    ) {\n      throw new Error(\n        `Switching between controlled mode (by using \\`selectedIndex\\`) and uncontrolled mode is not supported in \\`Tabs\\`.\nFor more information about controlled and uncontrolled mode of react-tabs see the README.`,\n      );\n    }\n    // Use a transactional update to prevent race conditions\n    // when reading the state in copyPropsToState\n    // See https://github.com/reactjs/react-tabs/issues/51\n    this.setState(state => Tabs.copyPropsToState(newProps, state));\n  }\n\n  static inUncontrolledMode(props) {\n    return props.selectedIndex === null;\n  }\n\n  handleSelected = (index, last, event) => {\n    // Call change event handler\n    if (typeof this.props.onSelect === 'function') {\n      // Check if the change event handler cancels the tab change\n      if (this.props.onSelect(index, last, event) === false) return;\n    }\n\n    const state = {\n      // Set focus if the change was triggered from the keyboard\n      focus: event.type === 'keydown',\n    };\n\n    if (Tabs.inUncontrolledMode(this.props)) {\n      // Update selected index\n      state.selectedIndex = index;\n    }\n\n    this.setState(state);\n  };\n\n  // preserve the existing selectedIndex from state.\n  // If the state has not selectedIndex, default to the defaultIndex or 0\n  static copyPropsToState(props, state, focus = false) {\n    const newState = {\n      focus,\n    };\n\n    if (Tabs.inUncontrolledMode(props)) {\n      const maxTabIndex = getTabsCount(props.children) - 1;\n      let selectedIndex = null;\n\n      if (state.selectedIndex != null) {\n        selectedIndex = Math.min(state.selectedIndex, maxTabIndex);\n      } else {\n        selectedIndex = props.defaultIndex || 0;\n      }\n      newState.selectedIndex = selectedIndex;\n    }\n\n    return newState;\n  }\n\n  render() {\n    const { children, defaultIndex, defaultFocus, ...props } = this.props;\n\n    props.focus = this.state.focus;\n    props.onSelect = this.handleSelected;\n\n    if (this.state.selectedIndex != null) {\n      props.selectedIndex = this.state.selectedIndex;\n    }\n\n    return <UncontrolledTabs {...props}>{children}</UncontrolledTabs>;\n  }\n}\n\nTabs.tabsRole = 'Tabs';\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cx from 'classnames';\n\nexport default class TabList extends Component {\n  static defaultProps = {\n    className: 'react-tabs__tab-list',\n  };\n\n  static propTypes = {\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n  };\n\n  render() {\n    const { children, className, ...attributes } = this.props;\n\n    return (\n      <ul {...attributes} className={cx(className)} role=\"tablist\">\n        {children}\n      </ul>\n    );\n  }\n}\n\nTabList.tabsRole = 'TabList';\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cx from 'classnames';\n\nconst DEFAULT_CLASS = 'react-tabs__tab';\n\nexport default class Tab extends Component {\n  static defaultProps = {\n    className: DEFAULT_CLASS,\n    disabledClassName: `${DEFAULT_CLASS}--disabled`,\n    focus: false,\n    id: null,\n    panelId: null,\n    selected: false,\n    selectedClassName: `${DEFAULT_CLASS}--selected`,\n  };\n\n  static propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object, PropTypes.string]),\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n    disabled: PropTypes.bool,\n    tabIndex: PropTypes.string,\n    disabledClassName: PropTypes.string,\n    focus: PropTypes.bool, // private\n    id: PropTypes.string, // private\n    panelId: PropTypes.string, // private\n    selected: PropTypes.bool, // private\n    selectedClassName: PropTypes.string,\n    tabRef: PropTypes.func, // private\n  };\n\n  componentDidMount() {\n    this.checkFocus();\n  }\n\n  componentDidUpdate() {\n    this.checkFocus();\n  }\n\n  checkFocus() {\n    if (this.props.selected && this.props.focus) {\n      this.node.focus();\n    }\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      disabled,\n      disabledClassName,\n      focus, // unused\n      id,\n      panelId,\n      selected,\n      selectedClassName,\n      tabIndex,\n      tabRef,\n      ...attributes\n    } = this.props;\n\n    return (\n      <li\n        {...attributes}\n        className={cx(className, {\n          [selectedClassName]: selected,\n          [disabledClassName]: disabled,\n        })}\n        ref={node => {\n          this.node = node;\n          if (tabRef) tabRef(node);\n        }}\n        role=\"tab\"\n        id={id}\n        aria-selected={selected ? 'true' : 'false'}\n        aria-disabled={disabled ? 'true' : 'false'}\n        aria-controls={panelId}\n        tabIndex={tabIndex || (selected ? '0' : null)}\n      >\n        {children}\n      </li>\n    );\n  }\n}\n\nTab.tabsRole = 'Tab';\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport cx from 'classnames';\n\nconst DEFAULT_CLASS = 'react-tabs__tab-panel';\n\nexport default class TabPanel extends Component {\n  static defaultProps = {\n    className: DEFAULT_CLASS,\n    forceRender: false,\n    selectedClassName: `${DEFAULT_CLASS}--selected`,\n  };\n\n  static propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.array, PropTypes.object]),\n    forceRender: PropTypes.bool,\n    id: PropTypes.string, // private\n    selected: PropTypes.bool, // private\n    selectedClassName: PropTypes.string,\n    tabId: PropTypes.string, // private\n  };\n\n  render() {\n    const {\n      children,\n      className,\n      forceRender,\n      id,\n      selected,\n      selectedClassName,\n      tabId,\n      ...attributes\n    } = this.props;\n\n    return (\n      <div\n        {...attributes}\n        className={cx(className, {\n          [selectedClassName]: selected,\n        })}\n        role=\"tabpanel\"\n        id={id}\n        aria-labelledby={tabId}\n      >\n        {forceRender || selected ? children : null}\n      </div>\n    );\n  }\n}\n\nTabPanel.tabsRole = 'TabPanel';\n"],"names":["isTab","el","type","tabsRole","isTabPanel","isTabList","isTabChild","child","deepMap","children","callback","Children","map","props","babelHelpers.typeof","cloneElement","deepForEach","forEach","childrenPropType","propName","componentName","error","tabsCount","panelsCount","tabListFound","listTabs","push","listChild","Error","indexOf","onSelectPropType","location","propFullName","prop","name","selectedIndex","selectedIndexPropType","defaultIndex","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","Array","isArray","apply","key","call","join","module","exports","define","amd","count","uuid","reset","getTabsCount","tabCount","getPanelsCount","panelCount","isTabNode","node","nodeName","getAttribute","isTabDisabled","canUseActiveElement","window","document","activeElement","e","UncontrolledTabs","tabNodes","handleKeyDown","isTabFromContainer","target","index","preventDefault","useSelectedIndex","keyCode","handleClick","getPrevTab","getNextTab","setSelected","slice","parentNode","filter","event","onSelect","getTab","getChildren","disabledTabClassName","focus","forceRenderTabPanel","selectedTabClassName","selectedTabPanelClassName","tabIds","panelIds","diff","result","listIndex","wasTabFocused","React","toArray","some","tab","selected","selectedClassName","disabledClassName","forceRender","nodeAncestor","parentElement","render","className","domRef","attributes","cx","Component","defaultProps","propTypes","PropTypes","oneOfType","string","array","object","func","bool","isRequired","number","Tabs","handleSelected","last","state","inUncontrolledMode","setState","copyPropsToState","defaultFocus","componentWillReceiveProps","newProps","process","newState","maxTabIndex","Math","min","TabList","DEFAULT_CLASS","Tab","componentDidMount","checkFocus","componentDidUpdate","disabled","id","panelId","tabIndex","tabRef","TabPanel","tabId"],"mappings":"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"}